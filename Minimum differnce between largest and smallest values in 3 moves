import java.util.Arrays;

public class Solution {
    public int minDifference(int[] nums) {
        int n = nums.length;
        
        // If the array has 4 or fewer elements, we can change all of them to the same value
        if (n <= 4) {
            return 0;
        }

        // Sort the array
        Arrays.sort(nums);

        // Calculate the minimum difference after performing at most 3 moves
        int minDifference = Integer.MAX_VALUE;
        
        // Compare the difference between various possible scenarios
        // We need to check 4 possible scenarios:
        // 1. Modify the 3 largest elements
        // 2. Modify the 2 largest elements and the smallest element
        // 3. Modify the largest element and the 2 smallest elements
        // 4. Modify the 3 smallest elements
        
        minDifference = Math.min(minDifference, nums[n-1-3] - nums[0]);
        minDifference = Math.min(minDifference, nums[n-1-2] - nums[1]);
        minDifference = Math.min(minDifference, nums[n-1-1] - nums[2]);
        minDifference = Math.min(minDifference, nums[n-1] - nums[3]);

        return minDifference;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        int[] nums1 = {5, 3, 2, 4};
        System.out.println(sol.minDifference(nums1)); // Output: 0
        
        int[] nums2 = {1, 5, 0, 10, 14};
        System.out.println(sol.minDifference(nums2)); // Output: 1
        
        int[] nums3 = {3, 100, 20};
        System.out.println(sol.minDifference(nums3)); // Output: 0
    }
}
